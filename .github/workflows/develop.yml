name: Build and Release Electron App

on:
  push:
    branches:
      - develop

jobs:
#  build-win:
#    name: Build Windows
#    runs-on: windows-latest
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Get Version Info (Windows)
#        id: get_version
#        shell: pwsh
#        run: |
#          # Check if we're running from a branch or tag
#          if ($env:GITHUB_REF.StartsWith('refs/heads/')) {
#            # Branch-based build - use timestamp and commit hash
#            $date = Get-Date -Format "yyyyMMdd"
#            $commit = git rev-parse --short HEAD
#            $env:VERSION = "$date-$commit"
#          } else {
#            # Tag-based build - extract tag version
#            $env:VERSION = $env:GITHUB_REF -replace '^refs/tags/', ''
#          }
#
#          Write-Host "VERSION=$env:VERSION"
#          echo "VERSION=$env:VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
#
#
#      - name: Install Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#
#      - name: Install Dependencies
#        shell: pwsh
#        run: npm install
#
#      - name: Build Electron App
#        shell: pwsh
#        run: npm run build
#
#      - name: Package Electron App to Win64 .msi
#        shell: pwsh
#        run: |
#          npx electron-builder --win msi --projectDir=./
#          $msiFile = Get-ChildItem ./dist -Filter "*.msi" | Select-Object -First 1
#          if ($msiFile) {
#            Rename-Item "./dist/$($msiFile.Name)" -NewName "AngularTasks-win32-x64-$env:VERSION.msi"
#            ls ./dist
#          } else {
#            Write-Error "No MSI file found in ./dist directory"
#            exit 1
#          }
#
##          Compress-Archive -Path ./MyTaskApplication-win32-x64 -DestinationPath dist/MyTaskApplication-win32-x64-$env:TAG_VERSION.zip
#
#      - name: Upload Windows Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: electron-win
#          path: dist/AngularTasks-win32-x64-${{ env.TAG_VERSION }}.msi

#  build-linux:
#    name: Build Linux
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Get Tag Version (Linux)
#        id: get_version
#        shell: bash
#        run: |
#          if [[ $GITHUB_REF == refs/heads/* ]]; then
#            date=$(date '+%Y%m%d')
#            commit=$(git rev-parse --short HEAD)
#            VERSION="$date-$commit"
#          else
#            VERSION=${GITHUB_REF#refs/tags/}
#          fi
#          echo "VERSION=$VERSION" >> $GITHUB_ENV
#
#      - name: Install Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 20
#
#      - name: Install Dependencies
#        run: npm install
#        shell: bash
#
#      - name: Build Electron App
#        run: npm run build
#        shell: bash
#
#      - name: Package Electron App Linux X64
#        run: |
#          npx electron-builder --projectDir=./ --publish never
#          mv ./dist/*.AppImage ./dist/AngularTasks-Linux-x64-${TAG_VERSION}.AppImage
#          mv ./dist/*.deb ./dist/AngularTasks-Linux-x64-${TAG_VERSION}.deb
#          mv ./dist/*.snap ./dist/AngularTasks-Linux-x64-${TAG_VERSION}.snap
#        shell: bash

#     - name: Upload Linux Artifacts
#       uses: actions/upload-artifact@v4
#       with:
#         name: electron-linux
#         path: |
#           dist/*.AppImage
#           dist/*.deb
#           dist/*.snap
#
  build-mac:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Tag Version (macOS)
        id: get_version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/heads/* ]]; then
            date=$(date '+%Y%m%d')
            commit=$(git rev-parse --short HEAD)
            VERSION="$date-$commit"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install
        shell: bash

      - name: Build Electron App
        run: npm run build
        shell: bash

      - name: Package Electron App macOS
        run: |
          npx electron-packager ./ MyTaskApplication --platform=darwin --arch x64 --overwrite
          npx electron-builder --mac --arch x64 --publish never
          pwd && ls ./dist
          npx electron-installer-dmg "./MyTaskApplication-darwin-arm64/MyTaskApplication.app" "MyTaskApplication" --out=dist --overwrite --dmg-title="MyTaskApplication $TAG_VERSION"
          mv dist/MyTaskApplication.dmg dist/MyTaskApplication-macOS-x64-${TAG_VERSION}.dmg
        shell: bash

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-mac
          path: dist/MyTaskApplication-macOS-arm64-${{ env.TAG_VERSION }}.dmg
